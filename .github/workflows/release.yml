# SPDX-PackageSummary: finnix-live-build
# SPDX-FileCopyrightText: Copyright (C) 2020-2025 Ryan Finnie
# SPDX-License-Identifier: MPL-2.0
---
name: "release"
"on":
  workflow_dispatch:
jobs:
  build:
    runs-on: "ubuntu-latest"
    permissions:
      id-token: "write"
      attestations: "write"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: true
      - name: "Dependency packages"
        run: |
          sudo apt update
          tools/get-dependencies --only required -0 | xargs -0 sudo apt -y install
          tools/get-dependencies --only optional | while IFS='' read -r pkg; do
            sudo apt -y install "${pkg}" || true
          done
      - name: "Build image"
        run: |
          # Prepare
          env | grep ^GITHUB_ | sudo tee -a /etc/environment >/dev/null
          sudo chown -R root:root .

          # Main ISO image
          sudo env BUILD_TAGS="release" ./finnix-live-build

          # Source ISO
          TEMP_BUILD_DIR="$(sudo mktemp -d -p "$(pwd)/build")"
          sudo env SOURCE_ISO=true BUILD_DIR="${TEMP_BUILD_DIR?}" ./finnix-live-build
          sudo mv "${TEMP_BUILD_DIR}/lb/finnix-source.iso" build/lb/
          sudo rm -rf "${TEMP_BUILD_DIR?}"
          echo "Note: The build information listed above is not used; only the source ISO is saved."
          echo "See the 'Build image' step for actual build information."

          # Cleanup
          sudo chown -R "$(id -un):$(id -gn)" .
      - name: "Attest"
        uses: "actions/attest-build-provenance@v1"
        with:
          subject-path: "${{ github.workspace }}/build/lb/mattix-*.iso"
      - name: "Upload artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          name: "finnix-live-build.${{ github.workflow }}.${{ github.job }}.${{ github.run_number }}.${{ github.run_id }}"
          path: |
            build/lb/finnix-*
            build/lb/chroot.files
            build/lb/chroot.packages.*
          # Faster uploads as ISOs are already heavily compressed
          compression-level: 0
  build-docker:
    name: "Build Docker image (${{ matrix.arch }})"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: "amd64"
            runs-on: "ubuntu-latest"
          - arch: "arm64"
            runs-on: "ubuntu-24.04-arm"
    runs-on: "${{ matrix.runs-on }}"
    permissions:
      id-token: "write"
      contents: "read"
      packages: "write"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: true
      - name: "Authentication"
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: "Dependency packages"
        run: |
          sudo apt update
          tools/get-dependencies --only required -0 | xargs -0 sudo apt -y install
          tools/get-dependencies --only optional | while IFS='' read -r pkg; do
            sudo apt -y install "${pkg}" || true
          done
      - name: "Build image"
        run: |
          IMAGE_ID="ghcr.io/${{ github.repository }}:release-${{ matrix.arch }}"
          IMAGE_ID=$(echo "$IMAGE_ID" | tr '[:upper:]' '[:lower:]')
          env BUILD_TAGS="release" DOCKER_BUILD="true" ./finnix-live-build
          docker image build -t "${IMAGE_ID}" build/docker
          docker image push "${IMAGE_ID}"
